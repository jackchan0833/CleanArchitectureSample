@model CodeItemEditViewModel
@{
    ViewData["Title"] = "Code Edit";
}
<nav aria-label="breadcrumb" class="border-bottom">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a class="link-underline-opacity-0" href="#">System Management</a></li>
        <li class="breadcrumb-item"><a class="link-underline-opacity-0" href="@Url.Action("Index", "CodeItem")">Code Parameters</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>
<div class="height-5"></div>
@await Html.PartialAsync("_Messages")
<form method="post" action="@Url.Action("Edit", "CodeItem")" id="submitForm">
    @Html.HiddenFor(model => model.CodeId)
    <div class="row">
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
            <span>Category:</span>
        </div>
        <div class="col-lg-4 col-md-3 col-sm-12">
            @Html.TextBoxFor(model => model.Category, new { @class = "form-control", @required = "required", @maxLength = "100"})
            <div class="invalid-feedback">
                Please provide a category.
            </div>
        </div>
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
            <span>Name:</span>
        </div>
        <div class="col-lg-4 col-md-3 col-sm-12">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @required = "required", @maxLength = "100"})
            <div class="invalid-feedback">
                Please provide a name.
            </div>
        </div>
    </div>
    <div class="row mt-1">
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
            <span>Value:</span>
        </div>
        <div class="col-lg-4 col-md-3 col-sm-12">
            @Html.TextBoxFor(model => model.Value, new { @class = "form-control", @maxLength = "500"})
        </div>
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
            <span>Sequence No.:</span>
        </div>
        <div class="col-lg-4 col-md-3 col-sm-12">
            @Html.TextBoxFor(model => model.SeqNo, new { @class = "form-control", @maxLength = "8"})
        </div>
    </div>
    <div class="row mt-1">
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
            <span>Remarks:</span>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-12">
            @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", @rows="4", @maxLength = "500"})
        </div>
    </div>
    <div class="row mt-1">
        <div class="col-lg-2 col-md-3 col-sm-12 text-lg-end text-md-end text-sm-start col-form-label">
        </div>
        <div class="col-lg-8 col-md-9 col-sm-12">
            <button type="button" class="btn btn-sm btn-primary" onclick="return submitForm();">Submit</button>
            <a href="@Url.Action("Index", "CodeItem")">Cancel</a>
        </div>
    </div>
</form>
<script>
    function submitForm() {
        var f = document.getElementById("submitForm");
        if (!f.checkValidity()) {
            f.classList.add('was-validated');
            return false;
        }
        confirmMessage("Are you want to sumbit?", function () {
            f.submit();
            return true;
        });
        //f.classList.remove('was-validated'); //remove class, if don't want to show error.
       return false; // return false always, decide by confirm message func.
    }
</script>
