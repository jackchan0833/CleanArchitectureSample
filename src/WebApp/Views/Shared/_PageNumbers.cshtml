@model PageNumberModel
@{
    if (Model.PageSize == 0)
    {
        Model.PageSize = 10; // default page size
    }
    int pageCount = Model.TotalCount / Model.PageSize + (Model.TotalCount % Model.PageSize == 0 ? 0 : 1);
    pageCount = pageCount == 0 ? 1 : pageCount;
    int currentPageNo = 1;
    if (Model.CurrentPageNo <= 0)
    {
        currentPageNo = 1;
    }
    else if (Model.CurrentPageNo > pageCount)
    {
        currentPageNo = pageCount;
    }
    else
    {
        currentPageNo = Model.CurrentPageNo;
    }
    int pageGroupCount = 5; //default page group count
    int currentPageGroup = currentPageNo / pageGroupCount + (currentPageNo % pageGroupCount == 0 ? 0 : 1);
    int startPageNo = (currentPageGroup - 1) * pageGroupCount + 1;
    int endPageNo = startPageNo + pageGroupCount - 1;
    if (endPageNo > pageCount)
    {
        endPageNo = pageCount;
    }
    string guid = Guid.NewGuid().ToString().Replace("-", "");
    string pageIndexChangeFuncName = "pageIndexChange_" + guid;
}

<ul class="pagination pagination-sm justify-content-center">
    @if (currentPageNo <= 1)
    {
        <li class="page-item disabled">
            <span class="page-link">Previous</span>
        </li>
    }
    else
    {
        int prePageNo = currentPageNo - 1;
        if (prePageNo == 0)
        {
            prePageNo = 1;
        }
        string pageClickEvent = pageIndexChangeFuncName + $"({prePageNo})";
        <li class="page-item">
            <a class="page-link" href="javascript:;" onclick="@pageClickEvent">Previous</a>
        </li>
    }
    @for (int pageNo = startPageNo; pageNo <= endPageNo; pageNo++)
    {
        string strPageNo = pageNo.ToString();
        if (currentPageNo == pageNo)
        {
            <li class="page-item active"><span class="page-link">@strPageNo</span></li>
        }
        else
        {
            string pageClickEvent = pageIndexChangeFuncName + $"({pageNo})";
            <li class="page-item"><a class="page-link" href="javascript:;" onclick="@pageClickEvent">@strPageNo</a></li>
        }
    }
    @if (currentPageNo >= pageCount)
    {
        <li class="page-item disabled"> <span class="page-link">Next</span></li>
    }
    else
    {
        int nextPageNo = currentPageNo + 1;
        if (nextPageNo > pageCount)
        {
            nextPageNo = pageCount;
        }
        string pageClickEvent = pageIndexChangeFuncName + $"({nextPageNo})";
        <li class="page-item"> <a class="page-link" href="javascript:;" onclick="@pageClickEvent">Next</a></li>
    }
</ul>
<div class="row">
    <div class="col-12 text-center">
        <span>Total Records: </span><span>@Model.TotalCount</span><span>, Page </span><span>@currentPageNo</span><span>/</span><span>@pageCount</span>
        @{
            string txtGotoPageNumberId = "txtGoPageNumber_" + guid;
            string gotoClickEvent = "pageNumber_OnIndexChange_GoTo_" + guid + $"()";
            string gotoSubmitFormId = "gotoSubmitForm_" + guid;
        }
        <span>Page: </span><input id="@txtGotoPageNumberId" type="text" style="width:30px;text-align:center; height:20px; vertical-align:middle;font-size:12px;" maxlength="3" />
        <input type="button" onclick="@gotoClickEvent" value="Go" style="width:30px;height:20px; vertical-align:middle;font-size:12px; line-height:12px;" />
        <form id="@gotoSubmitFormId" method="post"></form>
    </div>
</div>

<script type="text/javascript">
    @{
        string pageIndexChangeEventName = pageIndexChangeFuncName + "(pageNumber)";
    }
        function @pageIndexChangeEventName{
        var linkTempGoto = $("#@gotoSubmitFormId");
        linkTempGoto.attr("action", "@Model.PageIndexUrl" + "?PageIndex=" + pageNumber);
        linkTempGoto.submit();
    }
    function @gotoClickEvent {
        var strPageNumber = $("#@txtGotoPageNumberId").val();
        if ($.trim(strPageNumber) != "") {
            var regExprStr = "^(0|([1-9](\\d+)?))$";
            var regExpr = new RegExp(regExprStr);
            if (regExpr.test(strPageNumber) == false) {
                return false;
            }
            var pageNumber = parseInt(strPageNumber);
            var pageCount = parseInt(@pageCount);
            if (pageNumber <= 0) {
                pageNumber = 1;
            }
            if (pageNumber > pageCount) {
                pageNumber = pageCount;
            }
            @if (string.IsNullOrEmpty(Model.AjaxCallbackJsFunctionName))
            {
                Model.AjaxCallbackJsFunctionName = "//";
            }
            if ("@Model.AjaxCallbackJsFunctionName" != "//")
            {
                @{ @Model.AjaxCallbackJsFunctionName.ToString()}(pageNumber);
            }
            else
            {
                @{ @pageIndexChangeFuncName }(pageNumber);
            }
            return true;
        }
    }
</script>